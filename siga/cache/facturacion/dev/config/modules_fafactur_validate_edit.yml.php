<?php
// auto-generated by sfValidatorConfigHandler
// date: 2017/02/17 10:31:46

if ($_SERVER['REQUEST_METHOD'] == 'GET')
{
  $validators = array();
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
else if ($_SERVER['REQUEST_METHOD'] == 'POST')
{
  $validators = array();
  $validators['Validator_reffac'] = new sfPropelUniqueValidator();
  $validators['Validator_reffac']->initialize($context, array (
  'class' => 'Fafactur',
  'column' => 'reffac',
  'unique_error' => 'El registro ya Existe intente con otro.',
));
  $validators['Cliente_Validator'] = new CidesaExistValidator();
  $validators['Cliente_Validator']->initialize($context, array (
  'class' => 'Facliente',
  'column' => 'rifpro',
  'unique_error' => 'El Cliente no Existe.',
));
  $validators['Condpago_Validator'] = new CidesaExistValidator();
  $validators['Condpago_Validator']->initialize($context, array (
  'class' => 'Faconpag',
  'column' => 'id',
  'unique_error' => 'La Condición de Pago no existe.',
));
  $validators['DescripcionValidator'] = new sfStringValidator();
  $validators['DescripcionValidator']->initialize($context, array (
  'min' => 5,
  'min_error' => 'La Descripición no puede tener menos de 5 caracteres',
  'max' => 1500,
  'max_error' => 'La Descripición no puede tener más de 1500 caracteres',
));
  $validatorManager->registerName('reffac', 1, 'El Número de la Factura no puedo estar en Blanco', 'fafactur', null, false);
  $validatorManager->registerValidator('reffac', $validators['Validator_reffac'], 'fafactur');
  $validatorManager->registerName('fecfac', 1, 'La Fecha de la Factura no puede estar blanco', 'fafactur', null, false);
  $validatorManager->registerName('rifpro', 1, 'El rif de cliente no puede estar en blanco', 'fafactur', null, false);
  $validatorManager->registerValidator('rifpro', $validators['Cliente_Validator'], 'fafactur');
  $validatorManager->registerName('codconpag', 1, 'La Condicion de Pago no puede estar en blanco', 'fafactur', null, false);
  $validatorManager->registerValidator('codconpag', $validators['Condpago_Validator'], 'fafactur');
  $validatorManager->registerName('desfac', 1, 'La Descripción de la Factura no puede estar en blanco', 'fafactur', null, false);
  $validatorManager->registerValidator('desfac', $validators['DescripcionValidator'], 'fafactur');
  $validatorManager->registerName('numcontrol', 1, 'El Número de Control no puede estar blanco', 'fafactur', null, false);
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
