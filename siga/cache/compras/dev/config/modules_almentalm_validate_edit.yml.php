<?php
// auto-generated by sfValidatorConfigHandler
// date: 2017/02/17 10:34:19

if ($_SERVER['REQUEST_METHOD'] == 'GET')
{
  $validators = array();
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
else if ($_SERVER['REQUEST_METHOD'] == 'POST')
{
  $validators = array();
  $validators['Validator_rcpart'] = new sfPropelUniqueValidator();
  $validators['Validator_rcpart']->initialize($context, array (
  'class' => 'Caentalm',
  'column' => 'rcpart',
  'unique_error' => 'El registro ya Existe intente con otro.',
));
  $validators['FechaValidator'] = new sfRegexValidator();
  $validators['FechaValidator']->initialize($context, array (
  'match' => true,
  'pattern' => '/^(3[01]|2?[0-9]|1?[0-9]|0?[1-9]|[12]d)\\/(0?[1-9]|1[012])\\/(\\d{4})$/',
  'match_error' => 'La Fecha introducida es invalida',
));
  $validators['TipoValidator'] = new CidesaExistValidator();
  $validators['TipoValidator']->initialize($context, array (
  'class' => 'Catipent',
  'column' => 'codtipent',
  'unique_error' => 'El Código del Tipo de Movimiento no existe.',
));
  $validators['CentroValidator'] = new CidesaExistValidator();
  $validators['CentroValidator']->initialize($context, array (
  'class' => 'Cadefcen',
  'column' => 'codcen',
  'unique_error' => 'El Centro de Costo no existe.',
));
  $validatorManager->registerName('rcpart', 1, 'El Número de la Recepción no puedo estar en Blanco', 'caentalm', null, false);
  $validatorManager->registerValidator('rcpart', $validators['Validator_rcpart'], 'caentalm');
  $validatorManager->registerName('fecrcp', 1, 'La Fecha de la Recepción no puede estar en blanco', 'caentalm', null, false);
  $validatorManager->registerValidator('fecrcp', $validators['FechaValidator'], 'caentalm');
  $validatorManager->registerName('codpro', 1, 'El Código de la Contratistas de Bienes o Servicio y Cooperativas no puede estar en blanco', 'caentalm', null, false);
  $validatorManager->registerName('desrcp', 1, 'La descripción de no puede estar en blanco', 'caentalm', null, false);
  $validatorManager->registerName('tipmov', 1, 'El Tipo de Movimiento no puede estar en blanco', 'caentalm', null, false);
  $validatorManager->registerValidator('tipmov', $validators['TipoValidator'], 'caentalm');
  $validatorManager->registerName('codcen', 0, 'Required', 'caentalm', null, false);
  $validatorManager->registerValidator('codcen', $validators['CentroValidator'], 'caentalm');
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
