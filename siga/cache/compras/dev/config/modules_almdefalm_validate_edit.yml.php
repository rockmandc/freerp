<?php
// auto-generated by sfValidatorConfigHandler
// date: 2017/02/13 06:32:20

if ($_SERVER['REQUEST_METHOD'] == 'GET')
{
  $validators = array();
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
else if ($_SERVER['REQUEST_METHOD'] == 'POST')
{
  $validators = array();
  $validators['UniqueValidator'] = new sfPropelUniqueValidator();
  $validators['UniqueValidator']->initialize($context, array (
  'class' => 'Cadefalm',
  'column' => 'codalm',
  'unique_error' => 'El Código de Almacén ya existe. Por Favor, Cambiélo por otro.',
));
  $validators['MyStringValidator2'] = new sfStringValidator();
  $validators['MyStringValidator2']->initialize($context, array (
  'min' => 1,
  'min_error' => 'La Descripción no puede tener menos de 2 caracteres',
  'max' => 100,
  'max_error' => 'La Descripción no puede pasar mas de 250 caracteres',
));
  $validators['OrigenValidator'] = new CidesaExistValidator();
  $validators['OrigenValidator']->initialize($context, array (
  'class' => 'Bnubibie',
  'column' => 'codubi',
  'unique_error' => 'El Código de la Unidad no existe.',
));
  $validators['ResponsableValidator'] = new CidesaExistValidator();
  $validators['ResponsableValidator']->initialize($context, array (
  'class' => 'Nphojint',
  'column' => 'codemp',
  'unique_error' => 'El Responsable de la Localidad no existe.',
));
  $validators['CorrelValidator'] = new CidesaStringValidator();
  $validators['CorrelValidator']->initialize($context, array (
  'values' => 
  array (
    0 => '/^[0-9]*$/',
  ),
  'values_error' => 'Los Correlativos solo puede contener valores númericos',
));
  $validatorManager->registerName('codalm', 1, 'El Código de la Ubicación no puedo estar en Blanco', 'cadefalm', null, false);
  $validatorManager->registerValidator('codalm', $validators['UniqueValidator'], 'cadefalm');
  $validatorManager->registerName('nomalm', 1, 'La Descripción no puede estar en Blanco', 'cadefalm', null, false);
  $validatorManager->registerValidator('nomalm', $validators['MyStringValidator2'], 'cadefalm');
  $validatorManager->registerName('codcat', 1, 'El Código de la Unidad Asociada no puede estar en Blanco', 'cadefalm', null, false);
  $validatorManager->registerValidator('codcat', $validators['OrigenValidator'], 'cadefalm');
  $validatorManager->registerName('codemp', 0, 'Required', 'cadefalm', null, false);
  $validatorManager->registerValidator('codemp', $validators['ResponsableValidator'], 'cadefalm');
  $validatorManager->registerName('corfac', 0, 'Required', 'cadefalm', null, false);
  $validatorManager->registerValidator('corfac', $validators['CorrelValidator'], 'cadefalm');
  $validatorManager->registerName('cornumctr', 0, 'Required', 'cadefalm', null, false);
  $validatorManager->registerValidator('cornumctr', $validators['CorrelValidator'], 'cadefalm');
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
