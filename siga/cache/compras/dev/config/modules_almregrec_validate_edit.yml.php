<?php
// auto-generated by sfValidatorConfigHandler
// date: 2017/02/13 06:36:30

if ($_SERVER['REQUEST_METHOD'] == 'GET')
{
  $validators = array();
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
else if ($_SERVER['REQUEST_METHOD'] == 'POST')
{
  $validators = array();
  $validators['UniqueValidator'] = new sfPropelUniqueValidator();
  $validators['UniqueValidator']->initialize($context, array (
  'class' => 'Carecaud',
  'column' => 'codrec',
  'unique_error' => 'El Código del Recaudo ya existe. Por Favor, Cambiélo por otro.',
));
  $validators['CorrelValidator'] = new CidesaStringValidator();
  $validators['CorrelValidator']->initialize($context, array (
  'values' => 
  array (
    0 => '/^[0-9]*$/',
  ),
  'values_error' => 'Los Correlativos solo puede contener valores númericos',
));
  $validators['StringValidator'] = new sfStringValidator();
  $validators['StringValidator']->initialize($context, array (
  'min' => 3,
  'min_error' => 'La Descripción del Recaudo no puede tener menos de 3 caracteres',
  'max' => 100,
  'max_error' => 'La Descripción del Recaudo no puede pasar mas de 100 caracteres',
));
  $validators['TipoValidator'] = new CidesaExistValidator();
  $validators['TipoValidator']->initialize($context, array (
  'class' => 'Catiprec',
  'column' => 'codtiprec',
  'unique_error' => 'El Código del Grupo del Recaudo no existe.',
));
  $validators['String2Validator'] = new sfStringValidator();
  $validators['String2Validator']->initialize($context, array (
  'min' => 3,
  'min_error' => 'La Descripción del Recaudo no puede tener menos de 3 caracteres',
  'max' => 100,
  'max_error' => 'La Descripción del Recaudo no puede pasar mas de 100 caracteres',
));
  $validatorManager->registerName('codrec', 1, 'El Código del Recaudo no puedo estar en Blanco', 'carecaud', null, false);
  $validatorManager->registerValidator('codrec', $validators['UniqueValidator'], 'carecaud');
  $validatorManager->registerValidator('codrec', $validators['CorrelValidator'], 'carecaud');
  $validatorManager->registerName('desrec', 1, 'El Descripción del Recaudo no puedo estar en Blanco', 'carecaud', null, false);
  $validatorManager->registerValidator('desrec', $validators['StringValidator'], 'carecaud');
  $validatorManager->registerName('codtiprec', 1, 'El Grupo del Recaudo no puedo estar en Blanco', 'carecaud', null, false);
  $validatorManager->registerValidator('codtiprec', $validators['TipoValidator'], 'carecaud');
  $validatorManager->registerName('observ', 0, 'Required', 'carecaud', null, false);
  $validatorManager->registerValidator('observ', $validators['String2Validator'], 'carecaud');
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
