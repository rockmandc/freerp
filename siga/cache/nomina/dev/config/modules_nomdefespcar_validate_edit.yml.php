<?php
// auto-generated by sfValidatorConfigHandler
// date: 2017/02/13 06:11:47

if ($_SERVER['REQUEST_METHOD'] == 'GET')
{
  $validators = array();
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
else if ($_SERVER['REQUEST_METHOD'] == 'POST')
{
  $validators = array();
  $validators['Validator_codcar'] = new sfPropelUniqueValidator();
  $validators['Validator_codcar']->initialize($context, array (
  'class' => 'Npcargos',
  'column' => 'codcar',
  'unique_error' => 'El registro ya Existe intente con otro.',
));
  $validators['Validator_MyString'] = new sfStringValidator();
  $validators['Validator_MyString']->initialize($context, array (
  'min' => 2,
  'min_error' => 'El Nombre no puede tener menos de 2 caracteres',
  'max' => 100,
  'max_error' => 'El Nombre no puede pasar mas de 100 caracteres',
));
  $validators['CodTipValidator'] = new CidesaExistValidator();
  $validators['CodTipValidator']->initialize($context, array (
  'class' => 'NpTipcar',
  'column' => 'codtipcar',
  'unique_error' => 'El Código del Tipo de Cargo no existe.',
));
  $validators['CodGraValidator'] = new CidesaExistValidator();
  $validators['CodGraValidator']->initialize($context, array (
  'class' => 'Npcomocp',
  'column' => 'gracar',
  'unique_error' => 'El Código del grado no existe.',
));
  $validators['MyNumberValidator'] = new CidesaStringValidator();
  $validators['MyNumberValidator']->initialize($context, array (
  'values' => 
  array (
    0 => '/^([0-9]*(\\.*([0-9]{2,}))*\\,?[0-9]+|[0-9]+\\,?[0-9]*)?$/',
  ),
  'values_error' => 'El Sueldo del Cargo solo puede contener valores númericos',
));
  $validatorManager->registerName('codcar', 1, 'El código del Cargo no puede estar en Blanco', 'npcargos', null, false);
  $validatorManager->registerValidator('codcar', $validators['Validator_codcar'], 'npcargos');
  $validatorManager->registerName('nomcar', 1, 'El Nombre del Cargo no puede estar en Blanco', 'npcargos', null, false);
  $validatorManager->registerValidator('nomcar', $validators['Validator_MyString'], 'npcargos');
  $validatorManager->registerName('codtip', 1, 'El código del Tipo de Cargo no puede estar en Blanco', 'npcargos', null, false);
  $validatorManager->registerValidator('codtip', $validators['CodTipValidator'], 'npcargos');
  $validatorManager->registerName('graocp', 0, 'El codigo del Grado no puede estar en Blanco', 'npcargos', null, false);
  $validatorManager->registerValidator('graocp', $validators['CodGraValidator'], 'npcargos');
  $validatorManager->registerName('suecar', 1, 'El Sueldo del Cargo no puede estar en igual a cero.', 'npcargos', null, false);
  $validatorManager->registerValidator('suecar', $validators['MyNumberValidator'], 'npcargos');
  $context->getRequest()->setAttribute('fillin', array (
), 'symfony/filter');
}
