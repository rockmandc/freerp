methods:
  post:
   - "bnsegmue{codact}"
   - "bnsegmue{codmue}"
   - "bnsegmue{nrosegmue}"
   - "bnsegmue{fecsegmue}"
   - "bnsegmue{nomsegmue}"
   - "bnsegmue{fecsegven}"
   - "bnsegmue{prosegmue}"

names:
  bnsegmue{codact}:
    required:  Yes
    required_msg: El Código de Nivel no puede estar en Blanco.

  bnsegmue{codmue}:
    required:  Yes
    required_msg: El Código del Activo no puede estar en Blanco.

  bnsegmue{nrosegmue}:
    required:  Yes
    required_msg: El número de la Poliza no puede estar en Blanco.

  bnsegmue{fecsegmue}:
    required:  Yes
    required_msg: La Fecha no puede estar en Blanco
    validators: FechaValidator, FechaValidator1

  bnsegmue{nomsegmue}:
    required:  Yes
    required_msg: La Compañia Aseguradora no puede estar en Blanco.
    validators: DescripcionValidator

  bnsegmue{fecsegven}:
    required:  Yes
    required_msg: La Fecha no puede estar en Blanco
    validators: FechaValidator


  bnsegmue{prosegmue}:
    required:  Yes
    required_msg: El promotor no puede estar en Blanco.
    validators: DescripcionValidator2


ExistValidator:
    class: CidesaExistValidator
    param:
        class:        Bncobseg
        column:       codcob
        unique_error: La Cobertura debe Existir.


DescripcionValidator:
    class: sfStringValidator
    param:
        min:       2
        min_error: La Compañia Aseguradora no puede tener menos de 2 caracteres
        max:       254
        max_error: La Compañia Aseguradora no puede pasar mas de 254 caracteres

DescripcionValidator2:
    class: sfStringValidator
    param:
        min:       2
        min_error: El Promotor no puede tener menos de 2 caracteres
        max:       254
        max_error: El Promotor no puede pasar mas de 254 caracteres

FechaValidator:
    class: sfRegexValidator
    param:
        match:      yes
        pattern:    /^(3[01]|2?[0-9]|1?[0-9]|0?[1-9]|[12]d)\/(0?[1-9]|1[012])\/(\d{4})$/
        match_error: La Fecha  introducida es invalida

MyNumberValidator:
    class: CidesaStringValidator
    param:
        values:    [ '/^([0-9]*(\.*([0-9]{2,}))*\,?[0-9]+|[0-9]+\,?[0-9]*)?$/' ]
        values_error: El Campo solo puede contener valores númericos
        
FechaValidator1:
    class:         CidesaDateNow
    param:
        compare: 'now'
        compare_error: La Fecha no puede ser mayor a la Fecha Actual
        operator: '<='
        date_error:  La Fecha es Inválida        