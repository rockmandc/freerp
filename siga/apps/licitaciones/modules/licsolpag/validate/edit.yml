methods:
  post:
   - "lisolpag{numsolpag}"
   - "lisolpag{numval}"
   - "lisolpag{numcont}"
   - "lisolpag{obssolpag}"

   - "lisolpag{codempadm}"
   - "lisolpag{codempeje}"
   - "lisolpag{fecreg}"
   - "lisolpag{dias}"
   - "lisolpag{fecven}"


names:

  lisolpag{numsolpag}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: Validator_numact

  lisolpag{numval}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: Validator_numval

  lisolpag{numcont}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: Validator_numcont

  lisolpag{obssolpag}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: Validator_detact


  lisolpag{codempadm}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: Validator_codemp

  lisolpag{codempeje}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: Validator_codemp

    
  lisolpag{fecreg}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: FechaValidator

  lisolpag{dias}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: MyNumberValidator
    
  lisolpag{fecven}:
    required:  Yes
    required_msg: Este campo no puede estar en Blanco
    validators: FechaValidator

    
Validator_numact:
    class: sfPropelUniqueValidator
    param:
        class:        Lisolpag
        column:       numsolpag
        unique_error: El número de acta ya existe, intente con otra

Validator_numval:
    class: CidesaExistValidator
    param:
        class:        Livaluaciones
        column:       numval
        unique_error: El número de valuación debe existir


Validator_numcont:
    class: CidesaExistValidator
    param:
        class:        Licontrat
        column:       numcont
        unique_error: El contrato no existe


Validator_codemp:
    class: CidesaExistValidator
    param:
        class:        Lidatste
        column:       codemp
        unique_error: El Empleado no existe



FechaValidator:
    class: sfRegexValidator
    param:
        match:      yes
        pattern:    /^(3[01]|2?[0-9]|1?[0-9]|0?[1-9]|[12]d)\/(0?[1-9]|1[012])\/(\d{4})$/
        match_error: La Fecha  introducida es invalida

MyNumberValidator:
    class: CidesaStringValidator
    param:
        values:    [ '/^[0-9]*$/' ]


Validator_detact:
    class: sfStringValidator
    param:
        min:       2
        min_error: El detalle del acta no puede tener menos de 2 caracteres
        max:       1000
        max_error: El detalle del acta no puede pasar mas de 1000 caracteres